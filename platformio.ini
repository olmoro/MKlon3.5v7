; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;  и
; https://docs.platformio.org/en/latest/projectconf/index.html
; Комментарии отсюда: https://kotyara12.ru/pubs/iot/crawl-to-pio/

[env]
build_flags =
 ; Опция указывает компилятору где искать исходники проекта. 
 ; Дело в том, что все мои библиотеки находятся в каталоге, отличном от каталога проекта. 
 ; А в каталоге проекта лежит очень важный файл – “project_config.h“, в нем собраны все настройки проекта. 
 ; Который используется в том числе и самими библиотеками. 
 ; Если не указать, где его искать, библиотеки не будут скомпилированы. 
 ; Впрочем, Вы можете использовать другой подход, и Вам этот параметр не понадобится.
 -Isrc

monitor_filters =
  ; Опции монитора COM-порта. У меня включен прямой вывод, необходимый для вывода логов в цвете. 
  ; На Windows 7 включать бесполезно, все равно не заработает. 
  ; Кроме того, в программе для ESP32 должна быть включена соответствующая опция. 
  ; Есть достаточно много параметров монитора...
  direct

lib_deps =
  ; Публичные библиотеки. 
  ; Если библиотека не установлена в PIO, то VSCode сам ее найдет и установит перед первым использованием. Удобно.
  ;256dpi/LWMQTT @ ^0.6.4

lib_extra_dirs =
  ; Локальные библиотеки.
  ; Папки с локальными библиотеками. 
  ; В данном конкретном случае это мои библиотеки, но можно туда поместить и другие. 
  ; Не нужно указывать пути к каждой отдельной библиотеке, но если библиотеки сгруппированы в подпапки (как у меня), 
  ; то придется указать пути ко всем расположениям.
  ; C:\PlatformIO\libs\system
  ; C:\PlatformIO\libs\wifi



board_build.embed_txtfiles =
  ; Указывает на дополнительные файлы, которые следует подключить к проекту. 

[env:esp32dev]
  ; Определяет настройки сборки проекта для конкретной платы – тип платы, платформу, фреймфорк, 
  ; скорость монитора и заливки bin-файла на плату. 
platform = espressif32
board = esp32dev
framework = arduino
;board_build.f_flash = 40000000L    ; test, отменено
board_build.flash_mode = dio   ; qio для 16Мб не использовать!
;board_build.flash_mode = qio    ; для 16Мб не использовать!

;board_build.partitions = default_16MB.csv
  ; Указывает на файл с разметкой flash-памяти ESP-шки. 
  ; Закомментировать для ESP32 4MB (по умолчанию partition.csv)

;upload_port = COM10           ; DOWNLOADER FOR ESP-WROOM-32
upload_port = COM4           ; 3.5v7
upload_speed = 921600
monitor_speed = 115200

build_flags =
  -Os
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
  ;-DconfigSUPPORT_STATIC_ALLOCATION=1    ; для экспериментов
  -DconfigSUPPORT_DYNAMIC_ALLOCATION=1    ; вероятно не используется
  -DINCLUDE_vTaskSuspend=1

build_src_flags =
  -DVENT24V=1             ; Выбор вентилятора 24, иначе 12 вольт (msupervisor.cpp)

  -DUART2=1               ; порт драйвера (другого и не предвидится) (mwake.cpp)

;  -DNOWIFI=1              ; Без WiFi - для снижения электропотребления (main.cpp)

  -DDEBUG_TREATY=1        ; Отладка параметров обмена (mcommands.cpp)
;  -DTEST_KEYS_CLEAR=1     ; Сообщать об очистке всех ключей раздела - будет в optionsfsm.cpp

  ;-DDEBUG_PID=1          ; (power_reg.cpp)
  
  ;-DWO_VIS=1               ; Отправляются только целевые команды (mcommands.cpp)

;;;  ;-DTESTCCCV=1            ; Вывод на терминал (cccvfsm.cpp)
  ;-DSTATE=1              ; ?отменено?
;
;  -DPRINT_PID=1           ; (cccvfsm.cpp) - отменено

;  -DPRINT_OPTION=1       ; (optionsfsm.cpp)
;  -DPRINT_DISCHARGE=1    ; 
;  -DPRINTDEVICE=1        ; (devicefsm.cpp)
;  -DPRINT_DISP=1    ; диспетчер

;  -DPRINT_9486=1        ; Вывод на терминал  - отменено
;  -DPRINT_BUTTON=1      ;     pressed button (mdisplay.cpp)
;  -DBOOT_STEP=1         ; Пошаговое исполнение Boot`а
